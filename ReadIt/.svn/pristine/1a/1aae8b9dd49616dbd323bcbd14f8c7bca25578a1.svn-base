package bookred.member.dao;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;

import bookred.book.dto.BookVO;
import bookred.common.dto.LockerMasterVO;
import bookred.member.dto.BkReserveVO;
import bookred.member.dto.DriveThruVO;
import bookred.member.dto.LockerVO;
import bookred.member.dto.RMVO;
import bookred.member.dto.RentBackVO;

public class ReserveDAOImpl implements ReserveDAO {
	private SqlSession session;

	public void setSqlSession(SqlSession session) {
		this.session = session;
	}
	@Override
	public int selectRentableByISBN(String book_isbn) throws SQLException{
		int count = session.selectOne("Reserve-Mapper.selectRentableByISBN",book_isbn);
		return count;
	}
	@Override
	public void updateBookStock(String book_isbn) throws SQLException {
		session.update("Reserve-Mapper.updateBookStock",book_isbn);
	}
	
	@Override
	public BookVO selectBookByISBN(String book_isbn) throws SQLException {
		BookVO book = session.selectOne("Reserve-Mapper.selectBookByISBN",book_isbn);
		return book;
	}
	@Override
	public List<RentBackVO> selectRentBookList(String mem_id) throws SQLException {
		List<RentBackVO> rentList = session.selectList("Reserve-Mapper.selectRentBookList",mem_id);
		return rentList;
	}
	@Override
	public List<BkReserveVO> selectReserveList(String mem_id) throws SQLException {
		List<BkReserveVO> reserveList = session.selectList("Reserve-Mapper.selectReserveList", mem_id);
		return reserveList;
	}

	@Override
	public List<LockerMasterVO> selectLockerList() throws SQLException {
		List<LockerMasterVO> lockerList = session.selectList("Reserve-Mapper.selectLockerList");
		return lockerList;
	}
	@Override
	public void insertRM(RMVO rmVO) throws SQLException {
		session.insert("Reserve-Mapper.insertRM",rmVO);
	}
	
	
	@Override
	public int selectRMSeqNextVal() throws SQLException {
		int rm_no = session.selectOne("Reserve-Mapper.selectRMSeqNextVal");
		return rm_no;
	}
	@Override
	public void insertBookReserve(Map<String, Object> dataParam) throws SQLException {
		session.insert("Reserve-Mapper.insertBookReserve",dataParam);
	}
	@Override
	public void insertLocker(LockerVO locker) throws SQLException {
		session.insert("Reserve-Mapper.insertLocker", locker);
	}
	@Override
	public void updateLockerMaster(int is_usable, String locker_num) throws SQLException {
		Map<String, Object> dataParam = new HashMap<String, Object>();
		dataParam.put("is_usable", is_usable);
		dataParam.put("locker_num", locker_num);
		session.update("Reserve-Mapper.updateLockerMaster",dataParam);
	}

	@Override
	public void insertDriveThru(DriveThruVO drive) throws SQLException {
		session.insert("Reserve-Mapper.insertDriveThru", drive);
	}
	@Override
	public List<RMVO> selectRMtakeMethodList(RMVO rmVO) throws SQLException {
		System.out.println("daomem_id " + rmVO.getMem_id());
		List<RMVO> takeList = session.selectList("Reserve-Mapper.selectRMtakeMethodList",rmVO);
		return takeList;
	}
	@Override
	public List<RMVO> selectRMTakeLibraryList(RMVO rmVO) throws SQLException {
		List<RMVO> takeList = session.selectList("Reserve-Mapper.selectRMTakeLibraryList",rmVO);
		return takeList;
	}
	@Override
	public List<RMVO> selectRMTakeLockerList(RMVO rmVO) throws SQLException {
		List<RMVO> takeList = session.selectList("Reserve-Mapper.selectRMTakeLockerList",rmVO);
		return takeList;
	}
	@Override
	public List<RMVO> selectRMTakeDeliveryList(RMVO rmVO) throws SQLException {
		List<RMVO> takeList = session.selectList("Reserve-Mapper.selectRMTakeDeliveryList",rmVO);
		return takeList;
	}
	@Override
	public List<RMVO> selectRMTakeDriveThruList(RMVO rmVO) throws SQLException {
		List<RMVO> takeList = session.selectList("Reserve-Mapper.selectRMTakeDriveThruList",rmVO);
		return takeList;
	}
	@Override
	public void updateRMRentStatusToCancel(int rm_no) throws SQLException {
		session.update("Reserve-Mapper.updateRMRentStatusToCancel",rm_no);
	}
	@Override
	public List<BkReserveVO> selectBookReserveListByRmNo(int rm_no) throws SQLException {
		List<BkReserveVO> reserveBookList = session.selectList("Reserve-Mapper.selectBookReserveByRmNo", rm_no);
		return reserveBookList;
	}
	

}
