package bookred.common.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import bookred.common.dto.MenuVO;
import bookred.common.service.MenuService;


@Controller	
public class CommonController {
	@Autowired
	private MenuService menuService;
	
	
	@GetMapping("/main")
	public String main(Model model) throws Exception{
		String url="/common/home";
		model.addAttribute("category","main");
		return url;
	}
	
	@RequestMapping("/index")
	public String index(@RequestParam(defaultValue = "M000000") String mCode, Model model)  throws Exception{
		String url="/common/indexPage";
		
		MenuVO menu = menuService.getMenuByMcode(mCode);
		
		model.addAttribute("menu",menu);
		return url;
	}
	
	
//	메뉴관련 Controller 관련 코드
	@RequestMapping("/subMenu")
	@ResponseBody
	public ResponseEntity<List<MenuVO>> subMenuToJSON(String mCode) {
		ResponseEntity<List<MenuVO>> entity = null;
		
		List<MenuVO> subMenu = null;
		try {
			subMenu = menuService.getSubMenuList(mCode);
			entity = new ResponseEntity<List<MenuVO>>(subMenu, HttpStatus.OK);
		} catch (Exception e) {
			entity = new ResponseEntity<List<MenuVO>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return entity;
	}
	
	@RequestMapping("/security/accessDenied")
	public void accessDenied() {}
	
//	@GetMapping("/common/loginForm")
//	public String loginForm(@RequestParam(defaultValue = "") String error, 
//							@ModelAttribute("retUrl") String retUrl, HttpServletResponse response) {
//		String url = "/common/loginForm";
//		
//		if(error != null && error.equals("-1")) {
//			response.setStatus(302);
//		}
//		
//		return url;
//	}
	
	@GetMapping("/common/loginForm")
	public String loginFormAdmin(@RequestParam(defaultValue = "") String error, 
								 @ModelAttribute("retUrl") String retUrl, HttpServletResponse response) {
		String url = "/common/loginForm";
		
		if(error != null && error.equals("-1")) {
			response.setStatus(302);
		}
		
		return url;
	}
	
	@GetMapping("/indexByAuth")
	public String loginSuccess(HttpServletRequest req, RedirectAttributes rttr) {
		String url = "/common/indexByAuth";
		
		
		return url;
	}
	
}
