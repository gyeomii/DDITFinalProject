package bookred.admin.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import bookred.admin.command.Criteria;
import bookred.book.dto.BookVO;
import bookred.book.service.BookService;
import bookred.common.dto.MenuVO;
import bookred.common.service.MenuService;
import bookred.member.dto.MemberVO;
import bookred.member.service.MemberService;
import bookred.member.service.RentBackService;

@Controller
@RequestMapping("/admin")
public class AdminController {

	@Autowired
	private MenuService menuService;
	
	@Autowired
	private MemberService memberService;
	
	@Autowired
	private RentBackService rentBackService;
	
	@Autowired
	private BookService bookService;
	

//	메뉴관련 Controller 관련 코드
	@RequestMapping("/subMenu")
	@ResponseBody
	public ResponseEntity<List<MenuVO>> subMenuToJSON(String mCode) {
		ResponseEntity<List<MenuVO>> entity = null;

		List<MenuVO> subMenu = null;
		try {
			subMenu = menuService.getSubMenuList(mCode);
			entity = new ResponseEntity<List<MenuVO>>(subMenu, HttpStatus.OK);
		} catch (Exception e) {
			entity = new ResponseEntity<List<MenuVO>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return entity;
	}

	@RequestMapping("/main")
	public String main() throws Exception {
		String url = "admin/common/main";
		return url;
	}

	@RequestMapping("/index")
	public String index(@RequestParam(defaultValue = "M900000") String mCode, Model model) throws Exception {
		String url = "/admin/common/index";
		MenuVO menu = menuService.getMenuByMcode(mCode);

		model.addAttribute("menu", menu);

		return url;
	}
	
	
	@RequestMapping("/driveThrough")
	public String driveThrough() throws Exception {
		String url = "admin/main/drive/drive";
		return url;
	}
	
	@RequestMapping("/quickNewBook")
	public String quickNewBook() throws Exception{
		String url = "admin/main/getBookManage/quickNewBook";
		
		return url;
	}
	
	@RequestMapping("/quickRentAndReturn")
	public String quickRentAndReturn() throws Exception{
		String url = "admin/main/rentAndReturn/rent";
		
		return url;
	}
	
	@RequestMapping(value="/memInfo",produces = "application/json;charset=utf-8", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> memInfo(String mem_id) throws Exception{
		String url = "admin/main/rentAndReturn/rent";
		System.out.println("data 넘어옴");
		System.out.println("mem_id" + mem_id);
		Map<String, Object> dataMap = new HashMap<String, Object>();
		
		MemberVO member =  memberService.getMember(mem_id);
		System.out.println(member.getMem_name());
		int count = rentBackService.getRentNotReturn(mem_id);
		System.out.println(count);
		dataMap.put("member", member);
		dataMap.put("count", count);
		
		return dataMap;
	}
	
	@RequestMapping(value="/bookInfo",produces = "application/json;charset=utf-8", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> bookInfo(int book_no) throws Exception{
		String url = "admin/main/rentAndReturn/rent";
		System.out.println("data 넘어옴");
		System.out.println("book_no" + book_no);
		Map<String, Object> dataMap = new HashMap<String, Object>();
		
		BookVO book = bookService.getBookByBookNo(book_no);
		System.out.println(book.getBook_isbn());
		BookVO book_rentable = bookService.selectBookStock(book.getBook_isbn());
		System.out.println(book.getBook_publishDate());
		System.out.println(book_rentable.getBook_rentable());
		dataMap.put("book", book);
		dataMap.put("book_rentable", book_rentable);
		
		
		
		
		return dataMap;
	}


}
