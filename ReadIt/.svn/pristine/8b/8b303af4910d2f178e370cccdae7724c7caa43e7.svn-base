package bookred.member.service;

import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import bookred.admin.command.PageMaker;
import bookred.book.command.BookCriteria;
import bookred.book.command.BookPageMaker;
import bookred.book.dao.BookDAO;
import bookred.book.dto.BookVO;
import bookred.main.dto.EventVO;
import bookred.member.command.RentCriteria;
import bookred.member.command.RentPageMaker;
import bookred.member.dao.RentBackDAO;
import bookred.member.dto.RentBookVO;
import bookred.member.dto.RentBackVO;

public class RentBackServiceImpl implements RentBackService {

	private RentBackDAO rentBackDAO;

	public void setRentDAO(RentBackDAO rentBackDAO) {
		this.rentBackDAO = rentBackDAO;
	}

	@Override
	public RentBackVO getRentByRentNo(int rent_no) throws SQLException {
		RentBackVO rent = rentBackDAO.selectRentByRentNo(rent_no);
		return rent;
	}

	@Override
	public Map<String, Object> getRentList(RentCriteria cri, String mem_id) throws SQLException {
		Map<String, Object> dataMap = new HashMap<String, Object>();		

		List<RentBookVO> rentList = rentBackDAO.selectLentList(cri, mem_id);
		
		int totalCount = rentBackDAO.selectLentListCount(cri,mem_id);
		RentPageMaker pageMaker = new RentPageMaker();

		pageMaker.setCri(cri);
		pageMaker.setTotalCount(totalCount);

		dataMap.put("rentList", rentList);
		dataMap.put("pageMaker", pageMaker);

		return dataMap;
	}

	@Override
	public void RentDateExtention(RentBookVO rentBook) throws SQLException, ParseException {
		
		RentBookVO RentBookVO = rentBackDAO.selectReturnDatePlus7day(rentBook);
		System.out.println("due_daete: "+ RentBookVO.getDue_date() );
		
		rentBackDAO.updateRentDateExtention(RentBookVO);
		System.out.println("날짜 업데이트 완료!");
	}

	@Override
	public Map<String, Object> getAllReturnList(RentCriteria cri, String mem_id) throws SQLException {
		Map<String, Object> dataMap = new HashMap<String, Object>();
		
		List<RentBackVO> returnList = rentBackDAO.selectAllReturnList(cri, mem_id);
		
		int totalCount = rentBackDAO.selectAllReturnListCount(cri,mem_id);
		RentPageMaker pageMaker = new RentPageMaker();

		pageMaker.setCri(cri);
		pageMaker.setTotalCount(totalCount);

		dataMap.put("returnList", returnList);
		dataMap.put("pageMaker", pageMaker);

		return dataMap;
	}

	@Override
	public int getRentNotReturn(String mem_id) throws SQLException {
		int count = rentBackDAO.selectRentNotReturn(mem_id);
		return count;
	}

	@Override
	public RentBackVO getSelectedRentBookList(int book_no) throws SQLException {
//		Map<String, Object> dataMap = new HashMap<String, Object>();
		
		RentBackVO selectBackListByBookNo = rentBackDAO.selectBackListByBookNo(book_no);
		
//		RentPageMaker pageMaker = new RentPageMaker();
		
//		pageMaker.setCri(cri);
		
//		dataMap.put("selectBackListByBookNo", selectBackListByBookNo);
//		dataMap.put("pageMaker", pageMaker);
		
		
		return selectBackListByBookNo;
	}



}
