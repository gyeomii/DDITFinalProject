package bookred.member.service;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import bookred.book.command.BookCriteria;
import bookred.book.command.BookPageMaker;
import bookred.book.dao.BookDAO;
import bookred.book.dto.BookVO;
import bookred.member.dao.CartDAO;
import bookred.member.dao.ReserveDAO;
import bookred.member.dto.CartListVO;
import bookred.member.dto.CartVO;

public class CartServiceImpl implements CartService {

	private CartDAO cartDAO;
	private BookDAO bookDAO;
	private ReserveDAO reserveDAO;

	public void setCartDAO(CartDAO cartDAO) {
		this.cartDAO = cartDAO;
	}
	public void setBookDAO(BookDAO bookDAO) {
		this.bookDAO = bookDAO;
	}
	
	@Override
	public  Map<String, Object> getCartList(BookCriteria cri, String mem_id) throws SQLException {
		
		Map<String,Object> dataMap = new HashMap<String,Object>();
		List<CartListVO> cartList = cartDAO.selectCartList(cri, mem_id);
		
		//cart에서 북정보 읽어오기. 중복제거. isbn으로 검색해서 한권만.
		List<BookVO> bookList = new ArrayList<BookVO>();
		//cart에 들어가 있는 책에서. 같은 isbn 도서 모두 가져오기
		//Map<String, List<BookVO>> sameIsbnBookList = new HashMap<String, List<BookVO>>();
		
		for (CartListVO cartListVO : cartList) {
			String isbn = cartListVO.getBook_isbn();
			BookVO book = cartDAO.seleteOneBookByBookIsbn(isbn).get(0);
			List<BookVO> allbook = bookDAO.selectBookByBookIsbn(isbn);
			book.setSameBookList(allbook);
			bookList.add(book);
		}
		
		
		int totalCount = cartDAO.selectCartListCount(cri,mem_id);
		
		BookPageMaker pageMaker = new BookPageMaker();
		
		pageMaker.setCri(cri);
		pageMaker.setTotalCount(totalCount);
		
		dataMap.put("cartList", cartList);
		dataMap.put("bookList", bookList);
		dataMap.put("pageMaker", pageMaker);
		dataMap.put("mem_id", mem_id);
		
		return dataMap;
		
	}

	@Override
	public void deleteCart(CartVO cart) throws SQLException {
		
		cartDAO.deleteCart(cart);
	}

	@Override
	public void insertCart(CartVO cart) throws SQLException {
		
		cartDAO.insertCart(cart);
	}

	@Override
	public List<CartVO> checkCart(CartVO cart) throws SQLException {
		List<CartVO> cartList = new ArrayList<CartVO>();
		cartList = cartDAO.checkCart(cart);
		return cartList;
	}	
	
	
}
